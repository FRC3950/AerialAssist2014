// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
package org.usfirst.frc3950.Robot2013.subsystems;
import org.usfirst.frc3950.Robot2013.RobotMap;
import org.usfirst.frc3950.Robot2013.commands.*;
import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.command.Subsystem;
/**
 *
 */
public class DriveTrain extends Subsystem {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    SpeedController leftFront = RobotMap.driveTrainLeftFront;
    SpeedController leftBack = RobotMap.driveTrainLeftBack;
    SpeedController rightFront = RobotMap.driveTrainRightFront;
    SpeedController rightBack = RobotMap.driveTrainRightBack;
    RobotDrive driveMotors = RobotMap.driveTrainDriveMotors;
    DoubleSolenoid shifter = RobotMap.driveTrainShifter;
    Gyro gyro = RobotMap.driveTrainGyro;
    Accelerometer accelerometer = RobotMap.driveTrainAccelerometer;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    // Put methods for controlling this subsystem
    // here. Call these from Commands.
    RobotDrive drive;
    public void initDefaultCommand() {
        setDefaultCommand(new Drive());
    }
    public DriveTrain() {
        drive = new RobotDrive(leftFront, leftBack, rightFront, rightBack);
    }
    static double leftSped;
    static double rightSped;
    public void tankDrive(double leftSpeed, double rightSpeed) {
        System.out.println("left: " + leftSpeed + " right: " + rightSpeed);
        drive.tankDrive(-leftSpeed, -rightSpeed);
        leftSped = leftSpeed;
        rightSped = rightSpeed;
    }
    
    public void shiftUp()
    {
        shifter.set(DoubleSolenoid.Value.kForward);
    }
    public void shiftDown(){
        shifter.set(DoubleSolenoid.Value.kReverse);
    }
}
