// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.




#include "DriveSubsystem.h"
#include "../RobotMap.h"
#include "UtilFun.h"
#include "../Commands/DriveCommand.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

DriveSubsystem::DriveSubsystem() : Subsystem("DriveSubsystem") {
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	speedControllerleft1 = RobotMap::driveSubsystemSpeedControllerleft1;
	speedControllerleft2 = RobotMap::driveSubsystemSpeedControllerleft2;
	speedControllerright1 = RobotMap::driveSubsystemSpeedControllerright1;
	speedControllerright2 = RobotMap::driveSubsystemSpeedControllerright2;
	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	robotDriveArcade = RobotMap::driveSubsystemRobotDriveArcade;

}
    
void DriveSubsystem::InitDefaultCommand() {
	// Set the default command for a subsystem here.
	//SetDefaultCommand(new MySpecialCommand());
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	SetDefaultCommand(new DriveCommand());

}

static const float TWIST_TOLERANCE_MIN = -0.33;
static const float TWIST_TOLERANCE_MAX = 0.33;
static const float TWIST_SCALE_FACTOR = 0.65;

static const float Y_TOLERANCE_MIN = -0.25;
static const float Y_TOLERANCE_MAX = 0.25;

static const float X_TOLERANCE_MIN = -0.25;
static const float X_TOLERANCE_MAX = 0.35;

// Put methods for controlling this subsystem
// here. Call these from Commands.
void DriveSubsystem::Drive(float x, float y, float twist) {


	//printf("DriveSubsystem:(x,y,twist,angle)=(%f, %f, %f, %f)\n", x, y, twist, gyroAngle);
	//filter the X Y and twist values to 0 if thay are in a min max tolerence range
	// otherwize the original value is used
	x = ZeroIfInRangeInclusive(x, X_TOLERANCE_MIN, X_TOLERANCE_MAX);
	y = ZeroIfInRangeInclusive(y, Y_TOLERANCE_MIN, Y_TOLERANCE_MAX);
	twist = ZeroIfInRangeInclusive(twist, TWIST_TOLERANCE_MIN, TWIST_TOLERANCE_MAX);

	//Scale twist so movements are smoother.
	twist *= TWIST_SCALE_FACTOR;

	//Uncomment this if you whant to disable the gyro.
	//gyroAngle = 0.0;

	//Logger::GetInstance()->Log(Logger::kINFO, "DriveSubsystem:Filtered(x,y,twist,angle)=(%f, %f, %f, %f)\n", x, y, twist, gyroAngle);
	//robotDriveMecanum->MecanumDrive_Cartesian(x, y, twist, gyroAngle);
	robotDriveArcade->ArcadeDrive(y,twist);
}
